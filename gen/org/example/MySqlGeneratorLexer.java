// Generated from D:/Programming/IdeaProjects/SqlGeneratorAntlr/MySqlGenerator.g4 by ANTLR 4.13.1
package org.example;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class MySqlGeneratorLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, TABLENAME=6, COLUMNNAME=7, ALL=8, 
		SUBQUERY=9, WS=10, FIND=11, COUNT=12, SUM=13, AVG=14, MAX=15, MIN=16, 
		AND=17, OR=18, NOT=19, WHERE=20;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "TABLENAME", "COLUMNNAME", "ALL", 
			"SUBQUERY", "WS", "FIND", "COUNT", "SUM", "AVG", "MAX", "MIN", "AND", 
			"OR", "NOT", "WHERE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'Equals'", "'LessThan'", "'GreaterThan'", "'GreaterThanOrEquals'", 
			"'Between'", null, null, "'All'", "'SUB'", null, "'find'", "'Count'", 
			"'Sum'", "'Avg'", "'Max'", "'Min'", "'And'", "'Or'", "'Not'", "'By'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, "TABLENAME", "COLUMNNAME", "ALL", 
			"SUBQUERY", "WS", "FIND", "COUNT", "SUM", "AVG", "MAX", "MIN", "AND", 
			"OR", "NOT", "WHERE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MySqlGeneratorLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MySqlGenerator.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0014\u00ca\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0003\u0005w\b\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006"+
		"\u0091\b\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b"+
		"\u0001\b\u0001\b\u0001\b\u0001\t\u0004\t\u009c\b\t\u000b\t\f\t\u009d\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0000\u0000\u0014\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014\u0001\u0000\u0001\u0003\u0000\t\n\r\r  \u00ce\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0001)\u0001\u0000\u0000\u0000\u00030\u0001"+
		"\u0000\u0000\u0000\u00059\u0001\u0000\u0000\u0000\u0007E\u0001\u0000\u0000"+
		"\u0000\tY\u0001\u0000\u0000\u0000\u000bv\u0001\u0000\u0000\u0000\r\u0090"+
		"\u0001\u0000\u0000\u0000\u000f\u0092\u0001\u0000\u0000\u0000\u0011\u0096"+
		"\u0001\u0000\u0000\u0000\u0013\u009b\u0001\u0000\u0000\u0000\u0015\u00a1"+
		"\u0001\u0000\u0000\u0000\u0017\u00a6\u0001\u0000\u0000\u0000\u0019\u00ac"+
		"\u0001\u0000\u0000\u0000\u001b\u00b0\u0001\u0000\u0000\u0000\u001d\u00b4"+
		"\u0001\u0000\u0000\u0000\u001f\u00b8\u0001\u0000\u0000\u0000!\u00bc\u0001"+
		"\u0000\u0000\u0000#\u00c0\u0001\u0000\u0000\u0000%\u00c3\u0001\u0000\u0000"+
		"\u0000\'\u00c7\u0001\u0000\u0000\u0000)*\u0005E\u0000\u0000*+\u0005q\u0000"+
		"\u0000+,\u0005u\u0000\u0000,-\u0005a\u0000\u0000-.\u0005l\u0000\u0000"+
		"./\u0005s\u0000\u0000/\u0002\u0001\u0000\u0000\u000001\u0005L\u0000\u0000"+
		"12\u0005e\u0000\u000023\u0005s\u0000\u000034\u0005s\u0000\u000045\u0005"+
		"T\u0000\u000056\u0005h\u0000\u000067\u0005a\u0000\u000078\u0005n\u0000"+
		"\u00008\u0004\u0001\u0000\u0000\u00009:\u0005G\u0000\u0000:;\u0005r\u0000"+
		"\u0000;<\u0005e\u0000\u0000<=\u0005a\u0000\u0000=>\u0005t\u0000\u0000"+
		">?\u0005e\u0000\u0000?@\u0005r\u0000\u0000@A\u0005T\u0000\u0000AB\u0005"+
		"h\u0000\u0000BC\u0005a\u0000\u0000CD\u0005n\u0000\u0000D\u0006\u0001\u0000"+
		"\u0000\u0000EF\u0005G\u0000\u0000FG\u0005r\u0000\u0000GH\u0005e\u0000"+
		"\u0000HI\u0005a\u0000\u0000IJ\u0005t\u0000\u0000JK\u0005e\u0000\u0000"+
		"KL\u0005r\u0000\u0000LM\u0005T\u0000\u0000MN\u0005h\u0000\u0000NO\u0005"+
		"a\u0000\u0000OP\u0005n\u0000\u0000PQ\u0005O\u0000\u0000QR\u0005r\u0000"+
		"\u0000RS\u0005E\u0000\u0000ST\u0005q\u0000\u0000TU\u0005u\u0000\u0000"+
		"UV\u0005a\u0000\u0000VW\u0005l\u0000\u0000WX\u0005s\u0000\u0000X\b\u0001"+
		"\u0000\u0000\u0000YZ\u0005B\u0000\u0000Z[\u0005e\u0000\u0000[\\\u0005"+
		"t\u0000\u0000\\]\u0005w\u0000\u0000]^\u0005e\u0000\u0000^_\u0005e\u0000"+
		"\u0000_`\u0005n\u0000\u0000`\n\u0001\u0000\u0000\u0000ab\u0005t\u0000"+
		"\u0000bc\u0005a\u0000\u0000cd\u0005b\u0000\u0000de\u0005e\u0000\u0000"+
		"ef\u0005l\u0000\u0000fg\u0005a\u0000\u0000gw\u00051\u0000\u0000hi\u0005"+
		"t\u0000\u0000ij\u0005a\u0000\u0000jk\u0005b\u0000\u0000kl\u0005e\u0000"+
		"\u0000lm\u0005l\u0000\u0000mn\u0005a\u0000\u0000nw\u00052\u0000\u0000"+
		"op\u0005t\u0000\u0000pq\u0005a\u0000\u0000qr\u0005b\u0000\u0000rs\u0005"+
		"e\u0000\u0000st\u0005l\u0000\u0000tu\u0005a\u0000\u0000uw\u00053\u0000"+
		"\u0000va\u0001\u0000\u0000\u0000vh\u0001\u0000\u0000\u0000vo\u0001\u0000"+
		"\u0000\u0000w\f\u0001\u0000\u0000\u0000xy\u0005k\u0000\u0000yz\u0005o"+
		"\u0000\u0000z{\u0005l\u0000\u0000{|\u0005u\u0000\u0000|}\u0005m\u0000"+
		"\u0000}~\u0005n\u0000\u0000~\u007f\u0005a\u0000\u0000\u007f\u0091\u0005"+
		"1\u0000\u0000\u0080\u0081\u0005k\u0000\u0000\u0081\u0082\u0005o\u0000"+
		"\u0000\u0082\u0083\u0005l\u0000\u0000\u0083\u0084\u0005u\u0000\u0000\u0084"+
		"\u0085\u0005m\u0000\u0000\u0085\u0086\u0005n\u0000\u0000\u0086\u0087\u0005"+
		"a\u0000\u0000\u0087\u0091\u00052\u0000\u0000\u0088\u0089\u0005k\u0000"+
		"\u0000\u0089\u008a\u0005o\u0000\u0000\u008a\u008b\u0005l\u0000\u0000\u008b"+
		"\u008c\u0005u\u0000\u0000\u008c\u008d\u0005m\u0000\u0000\u008d\u008e\u0005"+
		"n\u0000\u0000\u008e\u008f\u0005a\u0000\u0000\u008f\u0091\u00053\u0000"+
		"\u0000\u0090x\u0001\u0000\u0000\u0000\u0090\u0080\u0001\u0000\u0000\u0000"+
		"\u0090\u0088\u0001\u0000\u0000\u0000\u0091\u000e\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0005A\u0000\u0000\u0093\u0094\u0005l\u0000\u0000\u0094\u0095"+
		"\u0005l\u0000\u0000\u0095\u0010\u0001\u0000\u0000\u0000\u0096\u0097\u0005"+
		"S\u0000\u0000\u0097\u0098\u0005U\u0000\u0000\u0098\u0099\u0005B\u0000"+
		"\u0000\u0099\u0012\u0001\u0000\u0000\u0000\u009a\u009c\u0007\u0000\u0000"+
		"\u0000\u009b\u009a\u0001\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000"+
		"\u0000\u009d\u009b\u0001\u0000\u0000\u0000\u009d\u009e\u0001\u0000\u0000"+
		"\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u00a0\u0006\t\u0000\u0000"+
		"\u00a0\u0014\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005f\u0000\u0000\u00a2"+
		"\u00a3\u0005i\u0000\u0000\u00a3\u00a4\u0005n\u0000\u0000\u00a4\u00a5\u0005"+
		"d\u0000\u0000\u00a5\u0016\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005C\u0000"+
		"\u0000\u00a7\u00a8\u0005o\u0000\u0000\u00a8\u00a9\u0005u\u0000\u0000\u00a9"+
		"\u00aa\u0005n\u0000\u0000\u00aa\u00ab\u0005t\u0000\u0000\u00ab\u0018\u0001"+
		"\u0000\u0000\u0000\u00ac\u00ad\u0005S\u0000\u0000\u00ad\u00ae\u0005u\u0000"+
		"\u0000\u00ae\u00af\u0005m\u0000\u0000\u00af\u001a\u0001\u0000\u0000\u0000"+
		"\u00b0\u00b1\u0005A\u0000\u0000\u00b1\u00b2\u0005v\u0000\u0000\u00b2\u00b3"+
		"\u0005g\u0000\u0000\u00b3\u001c\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005"+
		"M\u0000\u0000\u00b5\u00b6\u0005a\u0000\u0000\u00b6\u00b7\u0005x\u0000"+
		"\u0000\u00b7\u001e\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005M\u0000\u0000"+
		"\u00b9\u00ba\u0005i\u0000\u0000\u00ba\u00bb\u0005n\u0000\u0000\u00bb "+
		"\u0001\u0000\u0000\u0000\u00bc\u00bd\u0005A\u0000\u0000\u00bd\u00be\u0005"+
		"n\u0000\u0000\u00be\u00bf\u0005d\u0000\u0000\u00bf\"\u0001\u0000\u0000"+
		"\u0000\u00c0\u00c1\u0005O\u0000\u0000\u00c1\u00c2\u0005r\u0000\u0000\u00c2"+
		"$\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005N\u0000\u0000\u00c4\u00c5\u0005"+
		"o\u0000\u0000\u00c5\u00c6\u0005t\u0000\u0000\u00c6&\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c8\u0005B\u0000\u0000\u00c8\u00c9\u0005y\u0000\u0000\u00c9"+
		"(\u0001\u0000\u0000\u0000\u0004\u0000v\u0090\u009d\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}